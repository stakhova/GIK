/*fonts*/
@font-face {
    font-family: "Lato";
    src: url("/fonts/Lato-Medium.eot");
    src: url("/fonts/Lato-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/Lato-Regular.woff") format("woff"), url("/fonts/Lato-Medium.ttf") format("truetype"), url("/fonts/Lato-Medium.svg#Montserrat") format("svg");
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: "Lato";
    src: url("/fonts/Lato-Medium.eot");
    src: url("/fonts/Lato-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/Lato-Medium.woff") format("woff"), url("/fonts/Lato-Medium.ttf") format("truetype"), url("/fonts/Lato-Medium.svg#Montserrat") format("svg");
    font-weight: 500;
    font-style: normal;
}

@font-face {
    font-family: "Lato";
    src: url("/fonts/Lato-Bold.eot");
    src: url("/fonts/Lato-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Lato-SemiBold.woff") format("woff"), url("/fonts/Lato-Bold.ttf") format("truetype"), url("/fonts/Lato-Bold.svg#Montserrat") format("svg");
    font-weight: 600;
    font-style: normal;
}

@font-face {
    font-family: "Lato";
    src: url("/fonts/Lato-Bold.eot");
    src: url("/fonts/Lato-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Lato-Bold.woff") format("woff"), url("/fonts/Lato-Bold.ttf") format("truetype"), url("/fonts/Lato-Bold.svg#Montserrat") format("svg");
    font-weight: 700;
    font-style: normal;
}
@font-face {
    font-family: "Lato";
    src: url("/fonts/Lato-Bold.eot");
    src: url("/fonts/Lato-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Lato-Heavy.woff") format("woff"), url("/fonts/Lato-Bold.ttf") format("truetype"), url("/fonts/Lato-Bold.svg#Montserrat") format("svg");
    font-weight: 800;
    font-style: normal;
}
@font-face {
    font-family: "Lato";
    src: url("/fonts/Lato-Bold.eot");
    src: url("/fonts/Lato-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Lato-Black.woff") format("woff"), url("/fonts/Lato-Bold.ttf") format("truetype"), url("/fonts/Lato-Black.svg#Montserrat") format("svg");
    font-weight: 900;
    font-style: normal;
}


@font-face {
    font-family: "ua BRAND";
    src: url("/fonts/UA-BRAND.eot");
    src: url("/fonts/UA-BRAND.eot?#iefix") format("embedded-opentype"), url("../fonts/UA-BRAND-regular.woff") format("woff"), url("/fonts/UA-BRAND.ttf") format("truetype"), url("/fonts/UA-BRAND.svg#Montserrat") format("svg");
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: "ua BRAND";
    src: url("/fonts/UA-BRAND.eot");
    src: url("/fonts/UA-BRAND.eot?#iefix") format("embedded-opentype"), url("../fonts/UA-BRAND.woff") format("woff"), url("/fonts/UA-BRAND.ttf") format("truetype"), url("/fonts/UA-BRAND.svg#Montserrat") format("svg");
    font-weight: 700;
    font-style: normal;
}

@font-face {
    font-family: "ua BRAND";
    src: url("/fonts/UA-BRAND.eot");
    src: url("/fonts/UA-BRAND.eot?#iefix") format("embedded-opentype"), url("../fonts/ua-BRAND-black.woff") format("woff"), url("/fonts/UA-BRAND.ttf") format("truetype"), url("/fonts/UA-BRAND.svg#Montserrat") format("svg");
    font-weight: 900;
    font-style: normal;
}

@font-face {
    font-family: "Gilroy";
    src: url("/fonts/UA-BRAND.eot");
    src: url("/fonts/UA-BRAND.eot?#iefix") format("embedded-opentype"), url("../fonts/Gilroy-Bold.woff") format("woff"), url("/fonts/UA-BRAND.ttf") format("truetype"), url("/fonts/UA-BRAND.svg#Montserrat") format("svg");
    font-weight: 700;
    font-style: normal;
}

@font-face {
    font-family: "Gilroy";
    src: url("/fonts/UA-BRAND.eot");
    src: url("/fonts/UA-BRAND.eot?#iefix") format("embedded-opentype"), url("../fonts/Gilroy-SemiBold.woff") format("woff"), url("/fonts/UA-BRAND.ttf") format("truetype"), url("/fonts/UA-BRAND.svg#Montserrat") format("svg");
    font-weight: 600;
    font-style: normal;
}

@font-face {
    font-family: "Gilroy";
    src: url("/fonts/UA-BRAND.eot");
    src: url("/fonts/UA-BRAND.eot?#iefix") format("embedded-opentype"), url("../fonts/Gilroy-Medium.woff") format("woff"), url("/fonts/UA-BRAND.ttf") format("truetype"), url("/fonts/UA-BRAND.svg#Montserrat") format("svg");
    font-weight: 500;
    font-style: normal;
}
@font-face {
    font-family: "Gilroy";
    src: url("/fonts/UA-BRAND.eot");
    src: url("/fonts/UA-BRAND.eot?#iefix") format("embedded-opentype"), url("../fonts/Gilroy-Regular.woff") format("woff"), url("/fonts/UA-BRAND.ttf") format("truetype"), url("/fonts/UA-BRAND.svg#Montserrat") format("svg");
    font-weight: 400;
    font-style: normal;
}

:root {
    --color-white: #fff;
    --color-black: #222222;
    --color-background: #F3F3F3;
    --color-banner: #F2F2F2;
    --color-black-black: #000;
    --color-text: #57606F;
    --color-text-main: #323232;
    --color-primary:#FB6E27;
    --color-primary-second:#125A66;
    --color-grey:#F0F1F2;
    --color-grey-section:rgba(190,193,199,0.1);
    --color-grey-ttl: #505050;
    --color-price:#57606F;
    --color-subtitle:#808080;
    --color-pagg:#BEC1C7;
    --color-flash:rgba(255, 255, 255, 0.80);
    --color-aff:rgba(190, 193, 199, 0.1);
    --color-drop-elem:#D9D9D9;
    --color-footer-bottom:#F8F9F9;
    --color-blur:rgba(87, 96, 111, 0.39);
    --color-blur2: rgb(8, 59, 64, 0.75);
    --Lato: 'Lato', sans-serif;
    --UA-BRAND: 'UA-BRAND', arial;
}

*, *:before,
*:after {
    box-sizing: border-box;
    outline: none;
    -webkit-tap-highlight-color: transparent;
}

*, body, html {
    -webkit-text-size-adjust: none;
    -webkit-appearance: none;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

button {
    border: none;
}

mark {
    -webkit-text-fill-color: initial;
    text-fill-color: transparent;
    background: none;
}

.img {
    display: block;
}

.img.contain img {
    -o-object-fit: contain;
    object-fit: contain;
}

.img > img {
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
    object-fit: cover;
    display: block;
}

ul {
    list-style: none;
}

a {
    text-decoration: none;
    color: inherit;
}

a:hover {
    text-decoration: none;
}

button {
    background: transparent;
}

h1 {
    margin: 0;
}

html {
    font-size: 10px;
    scroll-behavior: smooth;
    scroll-padding-top: 120px;
}

@media only screen and (max-width: 1919px) {
    //html {
    //    font-size: 9px;
    //}
}
@media only screen and (max-width: 1024px) {
    html {
        scroll-padding-top: 80px;
        font-size: 8px;
    }
}
@media only screen and (max-width: 666px) {
    html {
        scroll-padding-top: 75px;
        font-size: 10px;
    }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
